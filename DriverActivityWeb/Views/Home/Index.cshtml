@{
    ViewData["Title"] = "Home Page";
    var Vehicles = Model.VehicleTypes;
}


@section Styles{
<link rel="stylesheet" href="~/lib/cropperjs/dist/cropper.css" />
<link rel="stylesheet" type="text/css" href="~/lib/DataTables/datatables.min.css"/>
<style type="text/css">
    .label {
        cursor: pointer;
    }

    .progress {
        display: none;
        margin-bottom: 1rem;
    }

    .alert {
        display: none;
    }

    .img-container img {
        max-width: 100%;
    }
</style>
}


<div class="text-center">
    <section>
        <div class="container">
            <label class="label" data-toggle="tooltip" title="Change your avatar">
                <img class="rounded" id="avatar" src="~/images/avatar.png" alt="avatar">
                <input type="file" class="sr-only" id="input" name="image" accept="image/*">
            </label>
            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
            </div>
            <div class="alert" role="alert"></div>
            <div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalLabel">Crop the image</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="img-container">
                                <img id="image" src="~/images/avatar.png">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="crop">Crop</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section>
        <div class="container">
            <div id="driver-container"></div>
        </div>
    </section>
    <section>
        <div class="container">
            <div id="driver-data-container">
                <table id="tbl-driver" cellpadding='0' cellspacing='0' width="100%" 
                class="display table table-bordered table-striped table-hover compact"></table>
            </div>
        </div>
    </section>
</div>




@section Scripts{
<script src="~/lib/cropperjs/dist/cropper.js"></script>
<script type="text/javascript" src="~/lib/DataTables/datatables.min.js"></script>
<script src="~/js/utilities/jq-table-util.js"></script>
<script src="~/js/app-utilies/driver-utility.js"></script>

<script type="text/javascript">

    const vehicles = JSON.parse(`@Json.Serialize(Vehicles)`);
    const settings = JSON.parse(`@Json.Serialize(Model.SystemSettings)`);

    //driverUtil.createDriverTabel(driverUtil.getDriverColumnDefs());
    //driverUtil.getDriverData();
    driverUtil.createDriverForm({eventId: `EVENT_${commonUtil.STATUS_MASTER_TYPE.SUBMIT}`, vehicleList: vehicles});

    window.addEventListener('DOMContentLoaded', function () {
      var avatar = document.getElementById('avatar');
      var image = document.getElementById('image');
      var input = document.getElementById('input');
      var $progress = $('.progress');
      var $progressBar = $('.progress-bar');
      var $alert = $('.alert');
      var $modal = $('#modal');
      var cropper;
      var fileName = null;

      //$('[data-toggle="tooltip"]').tooltip();

      input.addEventListener('change', function (e) {
        var files = e.target.files;
        var done = function (url) {
          input.value = '';
          image.src = url;
          $alert.hide();
          $modal.modal('show');
        };
        var reader;
        var file;
        var url;

        if (files && files.length > 0) {
          file = files[0];
          fileName = file.name;
          if (URL) {
            done(URL.createObjectURL(file));
          } else if (FileReader) {
            reader = new FileReader();
            reader.onload = function (e) {
              done(reader.result);
            };
            reader.readAsDataURL(file);
          }
        }
      });

      $modal.on('shown.bs.modal', function () {
        cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 3,
        });
      }).on('hidden.bs.modal', function () {
        cropper.destroy();
        cropper = null;
      });

      document.getElementById('crop').addEventListener('click', function () {
        var initialAvatarURL;
        var canvas;

        $modal.modal('hide');

        if (cropper) {
          canvas = cropper.getCroppedCanvas({
            width: 160,
            height: 160,
          });
          initialAvatarURL = avatar.src;
          avatar.src = canvas.toDataURL();
          $progress.show();
          $alert.removeClass('alert-success alert-warning');
          canvas.toBlob(function (blob) {
            var formData = new FormData();

            formData.append('avatar', blob, fileName);
            $.ajax(commonUtil.APP_URL.UPLOAD_DRIVER_IMAGE, {
              method: 'POST',
              data: formData,
              processData: false,
              contentType: false,

              xhr: function () {
                var xhr = new XMLHttpRequest();

                xhr.upload.onprogress = function (e) {
                  var percent = '0';
                  var percentage = '0%';

                  if (e.lengthComputable) {
                    percent = Math.round((e.loaded / e.total) * 100);
                    percentage = percent + '%';
                    $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);
                  }
                };

                return xhr;
              },

              success: function (result) {
                const {fileID} = result.data;
                $alert.show().addClass('alert-success').text('Upload success');
                driverUtil.fileID =  fileID;
              },

              error: function () {
                avatar.src = initialAvatarURL;
                $alert.show().addClass('alert-warning').text('Upload error');
              },

              complete: function () {
                $progress.hide();
              },
            });
          });
        }
      });

    });

</script>
}